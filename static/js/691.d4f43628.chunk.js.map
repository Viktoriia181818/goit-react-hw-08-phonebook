{"version":3,"file":"static/js/691.d4f43628.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contactinfo/selector.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contact.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formOnbtn\":\"ContactForm_formOnbtn__oCbLA\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import React from 'react';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactinfo/operation';\nimport { getContacts } from 'redux/contactinfo/selector';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\n\nexport const ContactForm = () => {\n  const [{ name, number }, setState] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts)\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleFormSubmit = e => {\n      e.preventDefault();\n      const contactsLists = [...items];\n      if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n      return;\n    } dispatch(addContact({ name: name, phone: number }));\n\n    setState({ ...INITIAL_STATE });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>Name </label>\n      <input\n        className={css.formName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <label className={css.formLabel}>Number </label>\n      <input\n        className={css.formNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChange}\n      />\n      <button className={css.formOnbtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contactinfo/operation';\nimport { getContacts, getFilter } from 'redux/contactinfo/selector';\nimport css from './ContactList.module.css';\n\nconst findContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const findVisContacts = findContacts(contacts, filter);\n\n    const dispatch = useDispatch();\n    const handleDelete = id => dispatch(delContact(id));\n\n    return (\n          <>\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {findVisContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.phone}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n      </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contactinfo/selector';\nimport { setFilter } from 'redux/contactinfo/filterSlice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n     const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  \n    return (\n        <div>\n            <label className={css.label}>Find contacts by Name</label>\n            <input className={css.input} type=\"filter\" name='filter' placeholder='Filter'\n                value={filter} onChange={handleChange}\n            >\n            \n            </input>\n        </div>\n    )\n   \n}","import { Heading } from '@chakra-ui/react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contactinfo/operation';\nimport { getIsLoading } from 'redux/contactinfo/selector';\n\nexport function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n\n    }, [dispatch]);\n\n    return (\n        <>\n            <Heading><h1>Phonebook</h1></Heading>\n            <ContactForm />\n            <div>{isLoading && 'Procces..'}</div>\n            <Filter />\n            <ContactList />\n        </>\n    )\n    \n}"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","INITIAL_STATE","name","number","ContactForm","useState","setState","dispatch","useDispatch","useSelector","handleChange","e","target","value","prevState","className","css","onSubmit","preventDefault","findIndex","contact","addContact","phone","alert","type","pattern","title","required","placeholder","onChange","ContactList","findVisContacts","toLowerCase","includes","findContacts","map","id","onClick","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}