{"version":3,"file":"static/js/907.5c776a18.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import React from 'react';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const [{ name, number }, setState] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts)\n\n const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n      return;\n    } dispatch(addContact({ name, number }));\n\n     setState({ ...INITIAL_STATE })\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport { Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Heading>\n        <title>Phonebook</title>\n      </Heading>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","INITIAL_STATE","name","number","ContactForm","useState","setState","dispatch","useDispatch","useSelector","handleChange","e","target","value","prevState","className","css","onSubmit","preventDefault","findIndex","contact","addContact","alert","type","pattern","title","required","placeholder","onChange","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}